import { expect, use } from 'chai'
import { Contract, BigNumber } from 'ethers'
import { deployContract, MockProvider, solidity } from 'ethereum-waffle'
import * as Underflow from '../build/Underflow.json'

use(solidity)

describe('Underflow', () => {
  const [wallet, walletTo] = new MockProvider().getWallets()
  let underflow: Contract

  beforeEach(async () => {
    underflow = await deployContract(wallet, Underflow)
  })

  it('should underflow', async () => {
    await underflow.transfer(walletTo.address, 1)
    expect(await underflow.balanceOf(wallet.address)).to.equal(
      BigNumber.from(2).pow(256).sub(1)
    )
    expect(await underflow.balanceOf(walletTo.address)).to.equal(1)
  })
})
