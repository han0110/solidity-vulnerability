import { expect, use } from 'chai'
import { Contract } from 'ethers'
import { deployContract, MockProvider, solidity } from 'ethereum-waffle'
import * as UnderflowImproved from '../build/UnderflowImproved.json'

use(solidity)

describe('UnderflowImproved', () => {
  const [wallet, walletTo] = new MockProvider().getWallets()

  let underflowImproved: Contract

  beforeEach(async () => {
    underflowImproved = await deployContract(wallet, UnderflowImproved)
  })

  it('should fail on underflow', async () => {
    await expect(underflowImproved.transfer(walletTo.address, 1)).to.be.reverted
  })
})
